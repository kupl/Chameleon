/* misc1.c */
int get_indent __ARGS((void));
int get_indent_lnum __ARGS((linenr_t lnum));
void set_indent __ARGS((int size, int del_first));
int open_line __ARGS((int dir, int redraw, int del_spaces, int old_indent));
int get_leader_len __ARGS((char_u *line, char_u **flags, int backward));
int plines_check __ARGS((linenr_t p));
int plines __ARGS((linenr_t p));
int plines_win __ARGS((WIN *wp, linenr_t p));
int plines_win_col __ARGS((WIN *wp, linenr_t p, long column));
int plines_m __ARGS((linenr_t first, linenr_t last));
int plines_m_win __ARGS((WIN *wp, linenr_t first, linenr_t last));
void ins_char __ARGS((int c));
void ins_str __ARGS((char_u *s));
int del_char __ARGS((int fixpos));
int del_chars __ARGS((long count, int fixpos));
int truncate_line __ARGS((int fixpos));
void del_lines __ARGS((long nlines, int dowindow, int undo));
int gchar_pos __ARGS((FPOS *pos));
int gchar_cursor __ARGS((void));
void pchar_cursor __ARGS((int c));
int inindent __ARGS((int extra));
char_u *skip_to_option_part __ARGS((char_u *p));
char *plural __ARGS((long n));
void changed __ARGS((void));
void unchanged __ARGS((BUF *buf, int ff));
void check_status __ARGS((BUF *buf));
void change_warning __ARGS((int col));
int ask_yesno __ARGS((char_u *str, int direct));
int get_keystroke __ARGS((void));
int get_number __ARGS((int colon));
void msgmore __ARGS((long n));
void beep_flush __ARGS((void));
void vim_beep __ARGS((void));
void init_homedir __ARGS((void));
void expand_env __ARGS((char_u *src, char_u *dst, int dstlen));
char_u *expand_env_save __ARGS((char_u *src));
void vim_setenv __ARGS((char_u *name, char_u *val));
void home_replace __ARGS((BUF *buf, char_u *src, char_u *dst, int dstlen, int one));
char_u *home_replace_save __ARGS((BUF *buf, char_u *src));
int fullpathcmp __ARGS((char_u *s1, char_u *s2, int checkname));
char_u *gettail __ARGS((char_u *fname));
char_u *getnextcomp __ARGS((char_u *fname));
char_u *get_past_head __ARGS((char_u *path));
int vim_ispathsep __ARGS((int c));
int vim_fnamecmp __ARGS((char_u *x, char_u *y));
int vim_fnamencmp __ARGS((char_u *x, char_u *y, size_t len));
char_u *concat_fnames __ARGS((char_u *fname1, char_u *fname2, int sep));
void add_pathsep __ARGS((char_u *p));
char_u *FullName_save __ARGS((char_u *fname, int force));
FPOS *find_start_comment __ARGS((int ind_maxcomment));
int cin_islabel __ARGS((int ind_maxcomment));
int cin_iscase __ARGS((char_u *s));
int cin_isscopedecl __ARGS((char_u *s));
int get_c_indent __ARGS((void));
int get_lisp_indent __ARGS((void));
void preserve_exit __ARGS((void));
int vim_fexists __ARGS((char_u *fname));
void line_breakcheck __ARGS((void));
int expand_wildcards __ARGS((int num_pat, char_u **pat, int *num_file, char_u ***file, int flags));
int match_suffix __ARGS((char_u *fname));
void addfile __ARGS((struct growarray *gap, char_u *f, int flags));
char_u *get_cmd_output __ARGS((char_u *cmd, int flags));
void FreeWild __ARGS((int num, char_u **file));
int goto_im __ARGS((void));
